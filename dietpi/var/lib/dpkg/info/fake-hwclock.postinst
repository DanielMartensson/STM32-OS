#!/bin/sh
set -e

# Version 0.1 included an initramfs hook. If we're upgrading from that
# version, we no longer have that hook. Update the generated initramfs
# now so that we don't have to in future.

cleanup_initramfs() {
  if command -v update-initramfs >/dev/null 2>&1; then
    update-initramfs -u
  fi
}

# We'll also need to clean up links to make sure that our new start
# link is installed by update-rc.d. Grotty. :-(
force_remove_old_init_links() {
  rm -f /etc/rc?.d/[SK]*fake-hwclock
}

case "${1:-}" in
  configure)
    if [ "$2"x = "0.1"x ] ; then
      cleanup_initramfs
      force_remove_old_init_links
    fi
    # Add a save here to make sure we have time data; the user may
    # reboot immediately afterwards, for example.
    fake-hwclock save
    ;;

  *) :;;
esac

# Automatically added by dh_systemd_enable/13.10
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# The following line should be removed in trixie or trixie+1
	deb-systemd-helper unmask 'fake-hwclock.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'fake-hwclock.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'fake-hwclock.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'fake-hwclock.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installinit/13.10
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/fake-hwclock" ]; then
		update-rc.d fake-hwclock start 02 S . stop 02 0 1 6 . >/dev/null || exit 1
	fi
fi
# End automatically added section

